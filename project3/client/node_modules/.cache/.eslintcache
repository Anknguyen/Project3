[{"C:\\Users\\ITassist\\bootcamp\\Projects\\Group Project 3\\Project3\\project3\\client\\src\\index.js":"1","C:\\Users\\ITassist\\bootcamp\\Projects\\Group Project 3\\Project3\\project3\\client\\src\\App.js":"2","C:\\Users\\ITassist\\bootcamp\\Projects\\Group Project 3\\Project3\\project3\\client\\src\\components\\Homepage.js":"3","C:\\Users\\ITassist\\bootcamp\\Projects\\Group Project 3\\Project3\\project3\\client\\src\\components\\CreateContent.js":"4","C:\\Users\\ITassist\\bootcamp\\Projects\\Group Project 3\\Project3\\project3\\client\\src\\reportWebVitals.js":"5","C:\\Users\\ITassist\\bootcamp\\Projects\\Group Project 3\\Project3\\project3\\client\\src\\utils\\queries.js":"6","C:\\Users\\ITassist\\bootcamp\\Projects\\Group Project 3\\Project3\\project3\\client\\src\\utils\\mutations.js":"7"},{"size":535,"mtime":1684175796203,"results":"8","hashOfConfig":"9"},{"size":2486,"mtime":1684183949860,"results":"10","hashOfConfig":"9"},{"size":2247,"mtime":1684183853483,"results":"11","hashOfConfig":"9"},{"size":2012,"mtime":1684182033214,"results":"12","hashOfConfig":"9"},{"size":362,"mtime":1684107932491,"results":"13","hashOfConfig":"9"},{"size":881,"mtime":1684184060619,"results":"14","hashOfConfig":"9"},{"size":1107,"mtime":1684177018076,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1jiq9k8",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ITassist\\bootcamp\\Projects\\Group Project 3\\Project3\\project3\\client\\src\\index.js",[],[],[],"C:\\Users\\ITassist\\bootcamp\\Projects\\Group Project 3\\Project3\\project3\\client\\src\\App.js",["41"],[],"import './App.css';\nimport CreateContent from './components/CreateContent';\nimport Homepage from './components/Homepage';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (<ApolloProvider client={client}>\n    <div className=\"App\">\n      <div className=\"Nav\">\n        <div className=\"title\">\n          <h1>Jet Reviews</h1>\n        </div>\n        <div className=\"NavItems\">\n          <h5 className=\"NavItem\">Search</h5>\n          <h5 className=\"NavItem\">Genres</h5>\n          <h5 className=\"NavItem\">Profile</h5>\n          <h5 className=\"NavItem\">Login</h5>\n        </div>\n      </div>\n      <div className='App-header'>\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<Homepage />} />\n          {/* <Route path=\"/content\" element={<Content />} /> */}\n          <Route path=\"/createContent\" element={<CreateContent />} />\n        </Routes>\n      </Router>\n      </div>\n      \n    </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n{\n  /* <div className=\"App-header\">\n        <div className=\"loginForm\">\n          <div className=\"loginContrast\">\n            <label for=\"email\"><strong>Email:</strong></label>\n            <input type=\"text\" id=\"email\" name=\"email\"></input><br></br><br></br>\n            <label for=\"password\"><strong>Password:</strong></label>\n            <input type=\"password\" id=\"password\" name=\"password\"></input><br></br><br></br>\n            <button>Sign in</button>\n            <button>Create an account</button>\n          </div>\n          \n        </div> */\n}\n","C:\\Users\\ITassist\\bootcamp\\Projects\\Group Project 3\\Project3\\project3\\client\\src\\components\\Homepage.js",["42"],[],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from '@apollo/client';\nimport { QUERY_CONTENT } from '../utils/queries';\n\n\n\n\n\nexport default function Homepage() {\n\n    const { loading, data } = useQuery(QUERY_CONTENT);\n    const newData = !loading ? data : []    \n    console.log(newData)\n    console.log(loading)\n\n  return (\n    <div className=\"homepageContainer\">\n      {data?.allContent ? data?.allContent.map(c => (\n        <div className=\"exampleGame\"><Link to={`/Content/${c.url}`}>{c.title}</Link></div>\n      )):<></>}\n      {/* <div className=\"exampleGame\"><Link to={`/Content/thelastofus`}>The Last of Us</Link></div>\n      <div className=\"exampleGame\"><Link to={`/Content`}>Halo 3</Link></div>\n      <div className=\"exampleGame\"><Link to={`/Content`}>Modern Warfare 2</Link></div>\n      <div className=\"exampleGame\"><Link to={`/Content`}>Arma 3</Link></div>\n      <div className=\"exampleGame\"><Link to={`/Content`}>Guitar Hero 3</Link></div>\n      <div className=\"exampleGame\"><Link to={`/Content`}>Cuphead</Link></div>\n      <div className=\"exampleGame\"><Link to={`/Content`}>Season</Link></div>\n      <div className=\"exampleGame\"><Link to={`/Content`}>Sifu</Link></div>\n      <div className=\"exampleGame\"><Link to={`/Content`}>The Forest</Link></div>\n      <div className=\"exampleGame\"><Link to={`/Content`}>Rust</Link></div>\n      <div className=\"exampleGame\"><Link to={`/Content`}>Pummel Party</Link></div>\n      <div className=\"exampleGame\"><Link to={`/Content`}>The Witcher 3: Wild Hunt</Link></div>\n      <div className=\"exampleGame\"><Link to={`/Content`}>Sun Haven</Link></div>\n      <div className=\"exampleGame\"><Link to={`/Content`}>Stardew Valley</Link></div>\n      <div className=\"exampleGame\"><Link to={`/Content`}>Viva Pi√±ata</Link></div>\n      <div className=\"exampleGame\"><Link to={`/Content`}>Assetto Corsa</Link></div>\n      <div className=\"exampleGame\"><Link to={`/Content`}>rFactor 2</Link></div>\n      <div className=\"exampleGame\"><Link to={`/Content`}>Borderlands 3</Link></div>\n      <div className=\"exampleGame\"><Link to={`/Content`}>Borderlands 2</Link></div>\n      <div className=\"exampleGame\"><Link to={`/Content`}>CSGO</Link></div> */}\n    </div>\n  );\n}","C:\\Users\\ITassist\\bootcamp\\Projects\\Group Project 3\\Project3\\project3\\client\\src\\components\\CreateContent.js",["43"],[],"import React, { useState } from 'react';\nimport { ADD_CONTENT } from '../utils/mutations';\nimport { useMutation } from '@apollo/client';\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction CreateContent() {\n  const [title, setTitle] = useState('');\n  const [rating, setRating] = useState('');\n  const [genre, setGenre] = useState('');\n  const [review, setReview] = useState('');\n\n  const [addContent, { error }] = useMutation(ADD_CONTENT)\n\n  const navigate = useNavigate()\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) throw new Error('No token found');\n\n  const url = title.split(\" \").map(w => w.tolowercase()).join(\"\");\n\n      const {data} = await addContent ({\n        variables: {\n        url,\n        title,\n        rating,\n        genre,\n        review}\n      });\n\n\n      console.log(data);\n      navigate(`/Content/${url}`);\n      // Do something with the response, such as displaying a success message\n    } catch (error) {\n      console.error(error);\n      // Handle errors\n    }\n  };\n\n  return (\n    <div cltitle='loginForm'>\n    <form cltitle=\"loginContrast\" onSubmit={handleSubmit}>\n      <label>\n        Title: &nbsp;\n        <input cltitle=\"label\" type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\n      </label>\n      <br />\n      <label>\n        Rating: &nbsp;\n        <input cltitle=\"label\" type=\"number\" max={10} value={rating} onChange={(e) => setRating(e.target.value)} />\n      </label>\n      <br />\n      <label>\n        Genre: &nbsp;\n        <input cltitle=\"label\" type=\"text\" value={genre} onChange={(e) => setGenre(e.target.value)} />\n      </label>\n      <br />\n      <label>\n        Review: &nbsp;\n        <textarea cltitle=\"label\" value={review} onChange={(e) => setReview(e.target.value)} />\n      </label>\n      <br />\n      <button onClick=\"myFunction(creatediv)\" type=\"submit\">Submit</button>\n    </form>\n    </div>\n  );\n}\n\n\nexport default CreateContent;\n","C:\\Users\\ITassist\\bootcamp\\Projects\\Group Project 3\\Project3\\project3\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\ITassist\\bootcamp\\Projects\\Group Project 3\\Project3\\project3\\client\\src\\utils\\queries.js",[],[],"C:\\Users\\ITassist\\bootcamp\\Projects\\Group Project 3\\Project3\\project3\\client\\src\\utils\\mutations.js",[],[],{"ruleId":"44","severity":1,"message":"45","line":67,"column":1,"nodeType":"46","messageId":"47","endLine":80,"endColumn":2},{"ruleId":"48","severity":1,"message":"49","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":25},{"ruleId":"48","severity":1,"message":"52","line":13,"column":24,"nodeType":"50","messageId":"51","endLine":13,"endColumn":29},"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used."]